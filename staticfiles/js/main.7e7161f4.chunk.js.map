{"version":3,"sources":["consts/userConsts.js","actions/userActions.js","pageComponents/ChatPage/Header.jsx","pageComponents/ChatPage/MessageBubble.jsx","pageComponents/ChatPage/SelfMessage.jsx","pageComponents/ChatPage/OthersMessage.jsx","pageComponents/ChatPage/Message.jsx","repositories/calcDate.js","consts/messageConsts.js","actions/messageActions.js","pageComponents/ChatPage/MessagesList.jsx","pageComponents/ChatPage/ChatArea.jsx","pageComponents/ChatPage/MessageInputArea.jsx","pageComponents/ChatPage/LoginArea.jsx","pages/ChatPage.jsx","components/FormHeader.jsx","components/FormContainer.jsx","pageComponents/LoginPage/LoginForm.jsx","components/Loader.jsx","components/ErrorMessage.jsx","components/MessageLink.jsx","pages/LoginPage.jsx","pageComponents/RegisterPage/RegisterForm.jsx","pages/RegisterPage.jsx","app/App.js","reducers/reducer.js","reducers/userReducers.js","reducers/messageReducers.js","store/store.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_ERROR_RESET","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","login","username","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","Header","userInfo","setScrollBottom","setLoading","useState","loggingOut","setLoggingOut","useDispatch","useEffect","removeItem","Box","position","display","justifyContent","alignItems","width","height","bgcolor","borderBottom","p","Grid","container","className","item","xs","sm","Typography","component","variant","color","align","textAlign","Button","onClick","MessageBubble","bgColor","text","style","backgroundColor","borderRadius","padding","minWidth","overflowWrap","SelfMessage","date","flexDirection","ml","pr","OthersMessage","mr","pl","Message","message","loginId","sentAt","yearOfSentAt","Number","split","monthOfSentAt","dayOfSentAt","hourOfSentAt","minuteOfSentAt","dateOfSentAt","Date","today","termDay","Math","floor","getFullYear","calcDate","sent_at","mb","user_id","user","MESSAGE_LIST_REQUEST","MESSAGE_LIST_SUCCESS","MESSAGE_LIST_FAIL","MESSAGE_SEND_REQUEST","MESSAGE_SEND_SUCCESS","MESSAGE_SEND_FAIL","MESSAGE_SEND_RESET","getMessages","get","MessagesList","scrollBottomRef","messages","useSelector","state","messageList","isMounted","repeat","setTimeout","map","index","length","ref","visibility","id","ChatArea","loading","maxHeight","mt","overflowY","flexWrap","MessageInputArea","setText","success","messageSend","bottom","left","right","borderTop","onSubmit","getState","userLogin","Authorization","token","sendMessage","InputBase","fullWidth","multiline","autoFocus","rowsMax","value","placeholder","onChange","e","target","fontSize","border","disabled","match","LoginArea","to","ChatPage","scrollBottom","useRef","current","scrollIntoView","FormHeader","title","IconButton","FormContainer","buttonTitle","buttonColor","children","LoginForm","loginHandler","setUsername","setPassword","INPUT_LABEL_PROPS_STYLES","INPUT_PROPS_STYLES","TextField","autoComplete","margin","required","label","InputLabelProps","InputProps","Loader","m","CircularProgress","size","ErrorMessage","Alert","severity","MessageLink","LoginPage","history","useHistory","error","push","maxWidth","px","pt","RegisterForm","registerHandler","RegisterPage","loggingIn","userRegister","registering","response","detail","register","App","exact","path","reducer","combineReducers","action","sentMessage","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e7161f4.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGIN_ERROR_RESET = \"USER_LOGIN_ERROR_RESET\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\";\n","import axios from \"axios\";\n\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from \"../consts/userConsts\";\n\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      {\n        username: username,\n        password: password,\n      },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: \"ユーザーネームまたはパスワードが間違っています\",\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({ type: USER_LOGOUT });\n\n  localStorage.removeItem(\"userInfo\");\n};\n\nexport const register = (username, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      {\n        username: username,\n        password: password,\n      },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { logout } from \"../../actions/userActions\";\n\nfunction Header({ userInfo, setScrollBottom, setLoading }) {\n  const [loggingOut, setLoggingOut] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    setLoading(true);\n    setLoggingOut(true);\n  };\n\n  useEffect(() => {\n    if (loggingOut) {\n      dispatch(logout());\n      setScrollBottom(true);\n      setLoggingOut(false);\n    }\n  }, [dispatch, setScrollBottom, setLoggingOut, loggingOut]);\n\n  return (\n    <Box\n      position=\"relative\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"100%\"\n      height=\"8rem\"\n      bgcolor=\"#fff\"\n      borderBottom=\"1px solid #f6f6f6\"\n      p={3}\n    >\n      <Grid container className=\"max-width\">\n        <Grid item xs={false} sm={3}></Grid>\n\n        <Grid item xs={userInfo ? 8 : true} sm={6}>\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n            color=\"primary\"\n            align=\"center\"\n          >\n            CHAT ROOM\n          </Typography>\n        </Grid>\n\n        <Grid item xs={userInfo ? 4 : false} sm={3}>\n          {userInfo && (\n            <Box textAlign=\"right\">\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={logoutHandler}\n              >\n                <Typography component=\"span\" variant=\"body2\">\n                  ログアウト\n                </Typography>\n              </Button>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction MessageBubble({ bgColor, color, text }) {\n  return (\n    <Box\n      style={{\n        backgroundColor: `${bgColor}`,\n        borderRadius: \"0.5rem\",\n        padding: \"0.5rem 1rem\",\n        minWidth: 0,\n      }}\n    >\n      <Box textAlign=\"center\" minWidth=\"0\">\n        <Typography\n          component=\"p\"\n          variant=\"h5\"\n          align=\"left\"\n          style={{ color: `${color}`, overflowWrap: \"break-word\" }}\n        >\n          {text}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default MessageBubble;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport MessageBubble from \"./MessageBubble\";\n\nfunction SelfMessage({ text, date }) {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" ml={8} pr={2}>\n      <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\n        <MessageBubble bgColor=\"#46b3e6\" color=\"#fff\" text={text} />\n      </Box>\n\n      <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\n        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n          {date}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SelfMessage;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport MessageBubble from \"./MessageBubble\";\n\nfunction OthersMessage({ username, text, date }) {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" mr={8} pl={2}>\n      <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\n        <Typography component=\"span\" variant=\"h6\" color=\"textSecondary\">\n          {username}\n        </Typography>\n      </Box>\n\n      <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\n        <MessageBubble bgColor=\"#dddddd\" color=\"#000\" text={text} />\n      </Box>\n\n      <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\n        <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n          {date}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default OthersMessage;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport SelfMessage from \"./SelfMessage\";\nimport OthersMessage from \"./OthersMessage\";\n\nimport calcDate from \"../../repositories/calcDate\";\n\nfunction Message({ message, loginId }) {\n  const date = calcDate(message.sent_at);\n\n  return (\n    <Box mb={1}>\n      {loginId === message.user_id ? (\n        <SelfMessage text={message.text} date={date} />\n      ) : (\n        <OthersMessage\n          username={message.user.username}\n          text={message.text}\n          date={date}\n        />\n      )}\n    </Box>\n  );\n}\n\nexport default Message;\n","export default function calcDate(sentAt) {\n  const yearOfSentAt = Number(sentAt.split(\" \")[0]);\n  const monthOfSentAt = Number(sentAt.split(\" \")[1]);\n  const dayOfSentAt = Number(sentAt.split(\" \")[2]);\n  const hourOfSentAt = Number(sentAt.split(\" \")[3]);\n  const minuteOfSentAt = sentAt.split(\" \")[4];\n\n  const dateOfSentAt = new Date(yearOfSentAt, monthOfSentAt - 1, dayOfSentAt);\n  const today = new Date();\n\n  const termDay = Math.floor((today - dateOfSentAt) / 86400000);\n\n  if (termDay === 0) return `${hourOfSentAt}:${minuteOfSentAt}`;\n\n  if (termDay === 1) return `昨日 ${hourOfSentAt}:${minuteOfSentAt}`;\n\n  if (yearOfSentAt !== today.getFullYear())\n    return `${yearOfSentAt}/${monthOfSentAt}/${dayOfSentAt} ${hourOfSentAt}:${minuteOfSentAt}`;\n\n  return `${monthOfSentAt}/${dayOfSentAt} ${hourOfSentAt}:${minuteOfSentAt}`;\n}\n","export const MESSAGE_LIST_REQUEST = \"MESSAGE_LIST_REQUEST\";\nexport const MESSAGE_LIST_SUCCESS = \"MESSAGE_LIST_SUCCESS\";\nexport const MESSAGE_LIST_FAIL = \"MESSAGE_LIST_FAIL\";\n\nexport const MESSAGE_SEND_REQUEST = \"MESSAGE_SEND_REQUEST\";\nexport const MESSAGE_SEND_SUCCESS = \"MESSAGE_SEND_SUCCESS\";\nexport const MESSAGE_SEND_FAIL = \"MESSAGE_SEND_FAIL\";\nexport const MESSAGE_SEND_RESET = \"MESSAGE_SEND_RESET\";\n","import axios from \"axios\";\n\nimport {\n  MESSAGE_LIST_REQUEST,\n  MESSAGE_LIST_SUCCESS,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_SEND_REQUEST,\n  MESSAGE_SEND_SUCCESS,\n  MESSAGE_SEND_FAIL,\n} from \"../consts/messageConsts\";\n\nexport const getMessages = () => async (dispatch) => {\n  try {\n    dispatch({ type: MESSAGE_LIST_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.get(\"/api/messages/\", config);\n\n    dispatch({ type: MESSAGE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: MESSAGE_LIST_FAIL, payload: error });\n  }\n};\n\nexport const sendMessage = (text) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MESSAGE_SEND_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/messages/send/\",\n      { text: text },\n      config\n    );\n\n    dispatch({ type: MESSAGE_SEND_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: MESSAGE_SEND_FAIL, payload: error });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport Message from \"./Message\";\n\nimport { getMessages } from \"../../actions/messageActions\";\n\nfunction MessagesList({ loginId, scrollBottomRef }) {\n  const messageList = useSelector((state) => state.messageList);\n  const { messages } = messageList;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const repeat = () => {\n      dispatch(getMessages());\n      if (isMounted) setTimeout(repeat, 1000);\n    };\n\n    repeat();\n\n    return () => (isMounted = false);\n  }, [dispatch]);\n\n  return (\n    <Box p=\"2rem 0\">\n      {messages &&\n        messages.map((message, index) => (\n          <Box key={message.id}>\n            <Message message={message} loginId={loginId} />\n\n            {index + 1 === messages.length && (\n              <Box ref={scrollBottomRef} visibility=\"hidden\">\n                latest message\n              </Box>\n            )}\n          </Box>\n        ))}\n    </Box>\n  );\n}\n\nexport default MessagesList;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport MessagesList from \"./MessagesList\";\n\nfunction ChatArea({ loginId, scrollBottomRef, loading }) {\n  return (\n    <Box\n      p=\"8rem 0 20rem\"\n      maxHeight=\"100vh\"\n      className=\"max-width\"\n      mt=\"-8rem\"\n      style={{\n        overflowY: \"scroll\",\n        flexWrap: \"nowrap\",\n      }}\n      visibility={loading ? \"hidden\" : \"visible\"}\n    >\n      <MessagesList loginId={loginId} scrollBottomRef={scrollBottomRef} />\n    </Box>\n  );\n}\n\nexport default ChatArea;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { getMessages, sendMessage } from \"../../actions/messageActions\";\nimport { MESSAGE_SEND_RESET } from \"../../consts/messageConsts\";\n\nfunction MessageInputArea({ setScrollBottom }) {\n  const [text, setText] = useState(\"\");\n\n  const messageSend = useSelector((state) => state.messageSend);\n  const { success } = messageSend;\n\n  const dispatch = useDispatch();\n\n  const submitHandler = () => {\n    setScrollBottom(true);\n    dispatch(sendMessage(text));\n    setText(\"\");\n  };\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: MESSAGE_SEND_RESET });\n      dispatch(getMessages());\n    }\n  }, [dispatch, success]);\n\n  return (\n    <Box\n      position=\"fixed\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      bgcolor=\"#fff\"\n    >\n      <Box\n        borderTop=\"1px solid #dddddd\"\n        borderBottom=\"1px solid #dddddd\"\n        p={2}\n        width=\"100%\"\n      >\n        <form onSubmit={submitHandler}>\n          <Box\n            display=\"flex\"\n            width=\"100%\"\n            maxHeight=\"10rem\"\n            className=\"max-width\"\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"flex-start\"\n              width=\"100%\"\n              bgcolor=\"#fafafa\"\n            >\n              <InputBase\n                fullWidth\n                multiline\n                autoFocus\n                rowsMax={6}\n                value={text}\n                placeholder=\"メッセージを入力してください\"\n                onChange={(e) => setText(e.target.value)}\n                style={{\n                  fontSize: \"1.4rem\",\n                  border: \"1rem solid #fafafa\",\n                }}\n              />\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                disabled={!text || !text.match(/\\S/g) ? true : false}\n              >\n                <Typography component=\"span\" variant=\"h5\">\n                  送信\n                </Typography>\n              </Button>\n            </Box>\n          </Box>\n        </form>\n      </Box>\n    </Box>\n  );\n}\n\nexport default MessageInputArea;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction LoginArea() {\n  return (\n    <Box\n      position=\"fixed\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      height=\"10rem\"\n      bgcolor=\"#fff\"\n      borderTop=\"1px solid #dddddd\"\n      borderBottom=\"1px solid #dddddd\"\n    >\n      <Box\n        padding=\"1rem\"\n        width=\"100%\"\n        height=\"100%\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Link to=\"/login\">\n          <Button color=\"primary\">\n            <Typography component=\"span\" variant=\"h5\">\n              ログインして会話に参加する\n            </Typography>\n          </Button>\n        </Link>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LoginArea;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport Header from \"../pageComponents/ChatPage/Header\";\nimport ChatArea from \"../pageComponents/ChatPage/ChatArea\";\nimport MessageInputArea from \"../pageComponents/ChatPage/MessageInputArea\";\nimport LoginArea from \"../pageComponents/ChatPage/LoginArea\";\n\nfunction ChatPage() {\n  const [scrollBottom, setScrollBottom] = useState(true);\n  const [loading, setLoading] = useState(true);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const messageList = useSelector((state) => state.messageList);\n  const { messages } = messageList;\n\n  const scrollBottomRef = useRef(null);\n\n  useEffect(() => {\n    if (scrollBottomRef && scrollBottomRef.current && scrollBottom) {\n      setScrollBottom(false);\n      scrollBottomRef.current.scrollIntoView();\n      setTimeout(() => setLoading(false), 300);\n    }\n  }, [messages, scrollBottom]);\n\n  return (\n    <Box>\n      <Header\n        userInfo={userInfo}\n        setScrollBottom={setScrollBottom}\n        setLoading={setLoading}\n      />\n\n      <ChatArea\n        loginId={userInfo ? userInfo.id : null}\n        scrollBottomRef={scrollBottomRef}\n        loading={loading}\n      />\n\n      {userInfo ? (\n        <MessageInputArea setScrollBottom={setScrollBottom} />\n      ) : (\n        <LoginArea />\n      )}\n    </Box>\n  );\n}\n\nexport default ChatPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nfunction FormHeader({ title, color }) {\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item xs={3}>\n        <Link to=\"/\">\n          <IconButton color={color}>\n            <ChatIcon fontSize=\"large\" />\n          </IconButton>\n        </Link>\n      </Grid>\n\n      <Grid item xs={6}>\n        <Typography component=\"h1\" variant=\"h4\" color={color}>\n          {title}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={3}></Grid>\n    </Grid>\n  );\n}\n\nexport default FormHeader;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction FormContainer({ onSubmit, buttonTitle, buttonColor, children }) {\n  return (\n    <form onSubmit={onSubmit}>\n      {children}\n\n      <Box mt={5}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color={buttonColor}\n          style={{ width: \"100%\", padding: \"1rem 3rem\" }}\n        >\n          <Typography component=\"span\" variant=\"h6\">\n            {buttonTitle}\n          </Typography>\n        </Button>\n      </Box>\n    </form>\n  );\n}\n\nexport default FormContainer;\n","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport FormContainer from \"../../components/FormContainer\";\n\nfunction LoginForm({\n  loginHandler,\n  username,\n  setUsername,\n  password,\n  setPassword,\n}) {\n  const INPUT_LABEL_PROPS_STYLES = { fontSize: \"1.5rem\" };\n  const INPUT_PROPS_STYLES = { fontSize: \"1.5rem\" };\n\n  return (\n    <FormContainer\n      onSubmit={loginHandler}\n      buttonTitle=\"ログイン\"\n      buttonColor=\"primary\"\n    >\n      <TextField\n        autoFocus\n        autoComplete=\"username\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"ユーザーネーム\"\n        InputLabelProps={{\n          style: INPUT_LABEL_PROPS_STYLES,\n        }}\n        InputProps={{\n          style: INPUT_PROPS_STYLES,\n        }}\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n\n      <TextField\n        autoComplete=\"current-password\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"パスワード\"\n        InputLabelProps={{\n          style: INPUT_LABEL_PROPS_STYLES,\n        }}\n        InputProps={{\n          style: INPUT_PROPS_STYLES,\n        }}\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n    </FormContainer>\n  );\n}\n\nexport default LoginForm;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Loader({ style }) {\n  return (\n    <Box textAlign=\"center\" m=\"0 auto\" style={style}>\n      <CircularProgress size=\"3rem\" color=\"secondary\">\n        <Typography variant=\"srOnly\">Loading...</Typography>\n      </CircularProgress>\n    </Box>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction ErrorMessage({ children }) {\n  return (\n    <Alert severity=\"error\">\n      <Typography variant=\"body2\" align=\"left\">\n        {children}\n      </Typography>\n    </Alert>\n  );\n}\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction MessageLink({ to, children }) {\n  return (\n    <Link to={to}>\n      <Typography variant=\"h6\">{children}</Typography>\n    </Link>\n  );\n}\n\nexport default MessageLink;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport FormHeader from \"../components/FormHeader\";\nimport LoginForm from \"../pageComponents/LoginPage/LoginForm\";\nimport Loader from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport MessageLink from \"../components/MessageLink\";\n\nimport { login } from \"../actions/userActions\";\n\nimport { USER_LOGIN_ERROR_RESET } from \"../consts/userConsts\";\n\nfunction LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const loginHandler = () => dispatch(login(username, password));\n\n  const history = useHistory();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, userInfo, error } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) history.push(\"/\");\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    return () => dispatch({ type: USER_LOGIN_ERROR_RESET });\n  }, [dispatch]);\n\n  return (\n    <Box textAlign=\"center\" maxWidth=\"320px\" m=\"0 auto\" px={3}>\n      <Box pt={5} mb={5}>\n        <FormHeader title=\"ログイン\" color=\"primary\" />\n      </Box>\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <Box>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n\n          <LoginForm\n            loginHandler={loginHandler}\n            username={username}\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n          />\n\n          <Box mt={5}>\n            <MessageLink to=\"/register\">\n              アカウントがありませんか？ 登録する\n            </MessageLink>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default LoginPage;\n","import React from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport FormContainer from \"../../components/FormContainer\";\n\nfunction RegisterForm({\n  registerHandler,\n  username,\n  setUsername,\n  password,\n  setPassword,\n}) {\n  const INPUT_LABEL_PROPS_STYLES = { fontSize: \"1.5rem\" };\n  const INPUT_PROPS_STYLES = { fontSize: \"1.5rem\" };\n\n  return (\n    <FormContainer\n      onSubmit={registerHandler}\n      buttonTitle=\"登録\"\n      buttonColor=\"secondary\"\n    >\n      <TextField\n        autoFocus\n        autoComplete=\"username\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"ユーザーネーム\"\n        InputLabelProps={{\n          style: INPUT_LABEL_PROPS_STYLES,\n        }}\n        InputProps={{\n          style: INPUT_PROPS_STYLES,\n        }}\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n\n      <TextField\n        autoComplete=\"current-password\"\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"パスワード\"\n        InputLabelProps={{\n          style: INPUT_LABEL_PROPS_STYLES,\n        }}\n        InputProps={{\n          style: INPUT_PROPS_STYLES,\n        }}\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n    </FormContainer>\n  );\n}\n\nexport default RegisterForm;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport FormHeader from \"../components/FormHeader\";\nimport RegisterForm from \"../pageComponents/RegisterPage/RegisterForm\";\nimport Loader from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport MessageLink from \"../components/MessageLink\";\n\nimport { login, register } from \"../actions/userActions\";\n\nimport { USER_REGISTER_RESET } from \"../consts/userConsts\";\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const registerHandler = () => dispatch(register(username, password));\n\n  const history = useHistory();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading: loggingIn, userInfo } = userLogin;\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading: registering, success, error } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) history.push(\"/\");\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: USER_REGISTER_RESET });\n      dispatch(login(username, password));\n    }\n  }, [dispatch, success, username, password]);\n\n  useEffect(() => {\n    return () => dispatch({ type: USER_REGISTER_RESET });\n  }, [dispatch]);\n\n  return (\n    <Box textAlign=\"center\" maxWidth=\"320px\" m=\"0 auto\" px={3}>\n      <Box pt={5} mb={5}>\n        <FormHeader title=\"ユーザー登録\" color=\"secondary\" />\n      </Box>\n\n      {loggingIn || registering ? (\n        <Loader />\n      ) : (\n        <Box>\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n\n          <RegisterForm\n            registerHandler={registerHandler}\n            username={username}\n            setUsername={setUsername}\n            password={password}\n            setPassword={setPassword}\n          />\n\n          <Box mt={5}>\n            <MessageLink to=\"/login\">\n              既にアカウントがありますか？ ログインする\n            </MessageLink>\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ChatPage from \"../pages/ChatPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={ChatPage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n        <Route component={ChatPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport { userLoginReducer, userRegisterReducer } from \"./userReducers\";\nimport { messageListReducer, messageSendReducer } from \"./messageReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  messageList: messageListReducer,\n  messageSend: messageSendReducer,\n});\n\nexport default reducer;\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_ERROR_RESET,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n} from \"../consts/userConsts\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_LOGIN_ERROR_RESET:\n      delete state.error;\n      return state;\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_REGISTER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import {\n  MESSAGE_LIST_REQUEST,\n  MESSAGE_LIST_SUCCESS,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_SEND_REQUEST,\n  MESSAGE_SEND_SUCCESS,\n  MESSAGE_SEND_FAIL,\n  MESSAGE_SEND_RESET,\n} from \"../consts/messageConsts\";\n\nexport const messageListReducer = (state = {}, action) => {\n  switch (action.type) {\n    case MESSAGE_LIST_REQUEST:\n      return { loading: true, messages: state.messages };\n\n    case MESSAGE_LIST_SUCCESS:\n      return { loading: false, messages: action.payload };\n\n    case MESSAGE_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const messageSendReducer = (state = {}, action) => {\n  switch (action.type) {\n    case MESSAGE_SEND_REQUEST:\n      return { loading: true };\n\n    case MESSAGE_SEND_SUCCESS:\n      return { loading: false, success: true, sentMessage: action.payload };\n\n    case MESSAGE_SEND_FAIL:\n      return { loading: false, error: action.payload };\n\n    case MESSAGE_SEND_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"../reducers/reducer\";\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./styles/style.css\";\nimport App from \"./app/App\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}